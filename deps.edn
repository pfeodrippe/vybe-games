{:deps
 {org.clojure/clojure {:mvn/version "1.12.0"}}

 :paths ["src" "resources" "vybe_native"]

 :aliases
 { ;; Run with clj -T:build function-in-build
  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.10.5"}}
          :ns-default build}

  :dev {:extra-deps {nubank/matcher-combinators {:mvn/version "3.9.1"}
                     io.github.pfeodrippe/vybe {:local/root "../vybe"}}
        :extra-paths ["test" "test-resources"]}

  ;; -- Linux
  :linux
  {:extra-deps {io.github.pfeodrippe/vybe {:mvn/version "0.7.574-linux-x64"}}
   :jvm-opts ["--enable-native-access=ALL-UNNAMED"
              "-Djava.library.path=vybe_native"

              ;; For tracing panama calls.
              #_"-Djextract.trace.downcalls=true"]}

  :linux-basic
  {:extra-deps {io.github.pfeodrippe/vybe {:mvn/version "0.7.574-linux-x64--basic"}}
   :jvm-opts ["--enable-native-access=ALL-UNNAMED"
              "-Djava.library.path=vybe_native"

              ;; For tracing panama calls.
              #_"-Djextract.trace.downcalls=true"]}

  ;; -- Mac
  :osx
  {:extra-deps {io.github.pfeodrippe/vybe {:mvn/version "0.7.574-macos-universal"}}
   :jvm-opts ["--enable-native-access=ALL-UNNAMED"
              "-Djava.library.path=vybe_native"

              "-XstartOnFirstThread"

              ;; For tracing panama calls.
              #_"-Djextract.trace.downcalls=true"]}

  ;; -- Windows
  :win
  {:extra-deps {io.github.pfeodrippe/vybe {:mvn/version "0.7.574-win-x64"}}
   :jvm-opts ["--enable-native-access=ALL-UNNAMED"
              "-Djava.library.path=vybe_native"

              ;; For tracing panama calls.
              #_"-Djextract.trace.downcalls=true"]}

  ;; -- FlowStorm.
  ;; See instructions at https://github.com/pfeodrippe/vybe-games/pull/2/files (thanks to Juan Monetta!)
  :runtime-storm {:classpath-overrides {org.clojure/clojure nil}
                  :extra-deps {com.github.flow-storm/clojure {:mvn/version "1.12.0-9"}
                               com.github.flow-storm/flow-storm-inst {:mvn/version "4.3.0"}
                               com.github.flow-storm/flow-storm-dbg {:mvn/version "4.3.0"}
                               ;; Added javafx-swing so we create a RenderedImage from a Image.
                               org.openjfx/javafx-swing {:mvn/version "21.0.4-ea+1"}
                               ;; Pools.
                               org.clj-commons/claypoole {:mvn/version "1.2.2"}}
                  :jvm-opts ["-Dclojure.storm.instrumentAutoPrefixes=false"

                             ;; Instrumentation
                             ;; Only games
                             "-Dclojure.storm.instrumentOnlyPrefixes=minimal,leo,noel"

                             ;; games + vybe
                             #_"-Dclojure.storm.instrumentOnlyPrefixes=vybe.game,minimal,leo,noel"
                             #_"-Dclojure.storm.instrumentSkipPrefixes=vybe.flecs,vybe.panama"]}
  :ui-storm {:extra-deps {com.github.flow-storm/flow-storm-dbg {:mvn/version "4.3.0"}
                          ;; Added javafx-swing so we create a RenderedImage from a Image.
                          org.openjfx/javafx-swing {:mvn/version "21.0.4-ea+1"}
                          ;; Pools.
                          org.clj-commons/claypoole {:mvn/version "1.2.2"}}
             :exec-fn vybe.debug.flow-storm/start-debugger
             #_ #_:exec-fn flow-storm.debugger.main/start-debugger
             :exec-args {:port 7888}
             :jvm-opts ["--enable-native-access=ALL-UNNAMED"
                        "-Djava.library.path=vybe_native"
                        "-Dflowstorm.theme=dark"
                        "-Dflowstorm.callTreeUpdate=false"
                        "-Dflowstorm.autoUpdateUI=false"]}}}
